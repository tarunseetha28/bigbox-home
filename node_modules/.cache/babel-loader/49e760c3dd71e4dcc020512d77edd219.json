{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tarun\\\\bigbox-advertise-home\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from \"axios\";\nimport appstore from './assets/astore.png';\nimport gplay from './assets/gplay.png';\nimport closeicon from './assets/closeicon.svg';\nimport videostore from './assets/videostore.svg';\nimport bigboxlogo from './assets/bigboxlogo.svg';\nimport createstore from './assets/createstore.svg';\nimport gettheapp from './assets/gettheapp.svg'; // const App = () => {\n//   const [category, setCategory] = useState([]);\n//   const [store, setStore] = useState([]);\n//   let attribute;\n//   function showCat(catid) {\n//     let attribute = catid.target.attributes.getNamedItem('data-cat').value;\n//     console.log(attribute)\n//   }\n//   let catid = 10;\n//   const fetchData = () => {\n//     const categoryApi = \"https://api.bigbox.online/api/v1/users/brand_categories?page=1&limit=10\";\n//     const storeApi = `https://api.bigbox.online/api/v1/users/brand_category_stores?brand_category_id=${catid}&page=1&limit=10`;\n//     const getCategory = axios.get(categoryApi);\n//     const getStore = axios.get(storeApi);\n//     axios.all([getCategory, getStore]).then(\n//       axios.spread((...allData) => {\n//         const allCategory = allData[0].data.brand_categories;\n//         const allStore = allData[1].data.stores;\n//         // console.log(allCategory);\n//         // console.log(allStore);\n//         setCategory(allCategory);\n//         setStore(allStore);\n//       })\n//     )\n//   }\n//   useEffect(() => {\n//     fetchData()\n//   }, [])\n//   function removeDiv1() {\n//     document.getElementById(\"ad1\")\n//       .outerHTML = \"\";\n//   }\n//   function removeDiv2() {\n//     document.getElementById(\"ad2\")\n//       .outerHTML = \"\";\n//   }\n//   return (\n//     <div className=\"App\">\n//       <div className=\"header\">\n//         <div className=\"header-left\">\n//           <img src={bigboxlogo} alt=\"\" style={{ marginRight: \"20px\" }} />\n//           <p>shop</p>\n//           <p>what is bigbox?</p>\n//           <p>bigbox app</p>\n//           <p>for business</p>\n//           <p>help</p>\n//         </div>\n//         <div className=\"header-right\">\n//           <img src={gettheapp} alt=\"\" className=\"header-btn\" />\n//           <img src={createstore} alt=\"\" className=\"header-btn\" />\n//         </div>\n//       </div>\n//       <div style={{ paddingLeft: \"30px\" }}>\n//         <h1 style={{ fontSize: \"80px\", marginBottom: \"5px\" }}>video call your favourite brands.</h1>\n//         <h5 style={{ fontSize: \"28px\", marginTop: \"0\", marginBottom: \"15px\", fontWeight: 400 }}>discover, follow and shop from your favourite stores. anytime. anywhere.</h5>\n//       </div>\n//       <div id=\"ad1\" className=\"promo\">\n//         <p>get the shopping experience you deserve with our new and improved bigbox app</p>\n//         <img src={appstore} alt=\"\" className=\"promo-img\" />\n//         <img src={gplay} alt=\"\" className=\"promo-img\" />\n//         <button className=\"button\" onClick={removeDiv1}>\n//           <img src={closeicon} alt=\"\" style={{ cursor: \"pointer\" }} />\n//         </button>\n//       </div>\n//       <div id=\"ad2\" className=\"promo\">\n//         <p>selling online? setup your video store with bigbox and sell easily through video calls</p>\n//         <img src={videostore} alt=\"\" className=\"promo-img\" />\n//         <button className=\"button\" onClick={removeDiv2}>\n//           <img src={closeicon} alt=\"\" style={{ cursor: \"pointer\" }} />\n//         </button>\n//       </div>\n//       <div className=\"body\">\n//         <div className=\"sidebar\">\n//           <p style={{ fontSize: \"20px\", fontWeight: 600, marginTop: \"0\" }}>categories</p>\n//           {\n//             category.map((item) => (\n//               <div onClick={showCat} data-cat={item.id} style={{ cursor: \"pointer\" }}>\n//                 {item.name}\n//               </div>\n//             ))\n//           }\n//         </div>\n//         <div className=\"centerbody\">\n//           <div>\n//             <p className=\"numberStores\">{store.length} stores</p>\n//           </div>\n//           <div className=\"home-body\">\n//             {\n//               store.map((item) => (\n//                 <div key={item.id} className=\"home-store\" >\n//                   <img src={item.brand_logo_url} alt=\"\" className=\"brand-logo\" />\n//                   <a style={{ textDecoration: 'none' }} href={`https://in.bigbox.online/${item.slug}`} target=\"_blank\" >\n//                     <img className=\"home-storeImg\" src={item.cover_pic_mobile_url} alt=\"\" />\n//                     <h1>{item.brand.name}</h1>\n//                   </a>\n//                 </div>\n//               ))\n//             }\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  const CATEGORIES_ENDPOINT = 'https://api.gousto.co.uk/products/v2.0/categories';\n  const PRODUCTS_ENDPOINT = 'https://api.gousto.co.uk/products/v2.0/products?includes[]=categories&includes[]=attributes&sort=position&image_sizes[]=365&image_sizes[]=400&period_id=120';\n  const NavContainer = React.createClass({\n    displayName: \"NavContainer\",\n\n    // All your state lives in your topmost container and is\n    // passed down to any component that needs it\n    getInitialState() {\n      return {\n        categories: [],\n        items: [],\n        selectedCategoryId: null\n      };\n    },\n\n    // Generic method that's used to set a selectedCategoryId\n    // Can now be passed into any component that needs to select a category\n    // without needing to worry about dealing with events and whatnot\n    selectCategory(category) {\n      this.setState({\n        selectedCategoryId: category\n      });\n    },\n\n    componentDidMount() {\n      this.serverRequest = axios.all([axios.get(CATEGORIES_ENDPOINT), axios.get(PRODUCTS_ENDPOINT)]).then(axios.spread((categoriesResponse, itemsResponse) => {\n        console.log('Categories', categoriesResponse.data.data);\n        console.log('Item', itemsResponse.data.data); // This `this` should work due to ES6 arrow functions\n\n        this.setState({\n          categories: categoriesResponse.data.data,\n          items: itemsResponse.data.data\n        });\n      }));\n    },\n\n    componentWillUnmount() {\n      this.serverRequest.abort();\n    },\n\n    render() {\n      // ABD: Always Be Destructuring\n      const {\n        categories,\n        items,\n        selectedCategoryId\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Store Cupboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavigationCategoryList, {\n          categories: categories // Pass the select function into the category list\n          // so the category items can call it when clicked\n          ,\n          selectCategory: this.selectCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavigationSubCategoryList, {\n          items: items // Pass the selected category into the list of items\n          // to be used for filtering the list\n          ,\n          selectedCategoryId: selectedCategoryId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this);\n    }\n\n  });\n  const NavigationCategory = React.createClass({\n    displayName: \"NavigationCategory\",\n\n    // Prevent natural browser navigation and\n    // run `selectCategory` passed down from parent\n    // with the id passed down from props\n    // No querying DOM for info! when props have the info we need\n    handleClick(e) {\n      const {\n        id,\n        selectCategory\n      } = this.props; // Handle the event here instead of all the way at the top\n      // You might want to do other things as a result of the click\n      // Like maybe:\n      // Logger.logEvent('Selected category', id);\n\n      e.preventDefault();\n      selectCategory(id);\n    },\n\n    render() {\n      const {\n        id,\n        title\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigationLink\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: id,\n          onClick: this.handleClick,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this);\n    }\n\n  });\n  const NavigationCategoryList = React.createClass({\n    displayName: \"NavigationCategoryList\",\n\n    // If you put your mapping method out here, it'll only\n    // get instantiated once when the component mounts\n    // rather than being redefined every time there's a rerender\n    renderCategories() {\n      const {\n        selectCategory,\n        categories\n      } = this.props;\n      return categories.map(category => {\n        const {\n          id,\n          title\n        } = category;\n        return /*#__PURE__*/_jsxDEV(NavigationCategory // Every time you have a list you need a key prop\n        , {\n          title: title,\n          id: id,\n          selectCategory: selectCategory\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this);\n      });\n    },\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navigationCategory\",\n          children: this.renderCategories()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this);\n    }\n\n  });\n  const NavigationSubCategoryLink = React.createClass({\n    displayName: \"NavigationSubCategoryLink\",\n\n    render() {\n      const {\n        name\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigationSubCategory\",\n        id: name,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this);\n    }\n\n  });\n  const NavigationSubCategoryList = React.createClass({\n    displayName: \"NavigationSubCategoryList\",\n\n    renderSubCategories() {\n      const {\n        selectedCategoryId,\n        items\n      } = this.props; // This is the key to filtering based on selectedCategoryId\n\n      return items.filter(item => {\n        // Checking all the categories in the item's categories array\n        // against the selectedCategoryId passed in from props\n        return item.categories.some(category => {\n          return category.id === selectedCategoryId;\n        });\n      }) // After filtering what you need, map through\n      // the new, shorter array and render each item\n      .map(item => {\n        const {\n          title,\n          link,\n          id\n        } = item;\n        return /*#__PURE__*/_jsxDEV(NavigationSubCategoryLink, {\n          name: title,\n          link: link\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this);\n      });\n    },\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subCategoryContainer\",\n        children: this.renderSubCategories()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this);\n    }\n\n  });\n  render( /*#__PURE__*/_jsxDEV(NavContainer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 10\n  }, this), document.getElementById('app'));\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/tarun/bigbox-advertise-home/src/App.js"],"names":["React","useState","useEffect","logo","axios","appstore","gplay","closeicon","videostore","bigboxlogo","createstore","gettheapp","App","CATEGORIES_ENDPOINT","PRODUCTS_ENDPOINT","NavContainer","createClass","getInitialState","categories","items","selectedCategoryId","selectCategory","category","setState","componentDidMount","serverRequest","all","get","then","spread","categoriesResponse","itemsResponse","console","log","data","componentWillUnmount","abort","render","state","NavigationCategory","handleClick","e","id","props","preventDefault","title","NavigationCategoryList","renderCategories","map","NavigationSubCategoryLink","name","NavigationSubCategoryList","renderSubCategories","filter","item","some","link","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAKA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAMC,mBAAmB,GAAG,mDAA5B;AACA,QAAMC,iBAAiB,GAAG,6JAA1B;AAEA,QAAMC,YAAY,GAAGf,KAAK,CAACgB,WAAN,CAAkB;AAAA;;AACrC;AACA;AACAC,IAAAA,eAAe,GAAG;AAChB,aAAO;AACLC,QAAAA,UAAU,EAAE,EADP;AAELC,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,kBAAkB,EAAE;AAHf,OAAP;AAKD,KAToC;;AAWrC;AACA;AACA;AACAC,IAAAA,cAAc,CAACC,QAAD,EAAW;AACvB,WAAK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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from \"axios\";\nimport appstore from './assets/astore.png'\nimport gplay from './assets/gplay.png'\nimport closeicon from './assets/closeicon.svg'\nimport videostore from './assets/videostore.svg'\nimport bigboxlogo from './assets/bigboxlogo.svg'\nimport createstore from './assets/createstore.svg'\nimport gettheapp from './assets/gettheapp.svg'\n\n\n\n\n\n// const App = () => {\n//   const [category, setCategory] = useState([]);\n//   const [store, setStore] = useState([]);\n//   let attribute;\n\n//   function showCat(catid) {\n//     let attribute = catid.target.attributes.getNamedItem('data-cat').value;\n//     console.log(attribute)\n\n//   }\n//   let catid = 10;\n\n//   const fetchData = () => {\n\n//     const categoryApi = \"https://api.bigbox.online/api/v1/users/brand_categories?page=1&limit=10\";\n//     const storeApi = `https://api.bigbox.online/api/v1/users/brand_category_stores?brand_category_id=${catid}&page=1&limit=10`;\n\n//     const getCategory = axios.get(categoryApi);\n//     const getStore = axios.get(storeApi);\n//     axios.all([getCategory, getStore]).then(\n//       axios.spread((...allData) => {\n//         const allCategory = allData[0].data.brand_categories;\n//         const allStore = allData[1].data.stores;\n//         // console.log(allCategory);\n//         // console.log(allStore);\n//         setCategory(allCategory);\n//         setStore(allStore);\n//       })\n//     )\n//   }\n\n//   useEffect(() => {\n//     fetchData()\n//   }, [])\n\n\n//   function removeDiv1() {\n//     document.getElementById(\"ad1\")\n//       .outerHTML = \"\";\n//   }\n\n//   function removeDiv2() {\n//     document.getElementById(\"ad2\")\n//       .outerHTML = \"\";\n\n//   }\n\n\n\n//   return (\n//     <div className=\"App\">\n\n//       <div className=\"header\">\n//         <div className=\"header-left\">\n//           <img src={bigboxlogo} alt=\"\" style={{ marginRight: \"20px\" }} />\n//           <p>shop</p>\n//           <p>what is bigbox?</p>\n//           <p>bigbox app</p>\n//           <p>for business</p>\n//           <p>help</p>\n//         </div>\n//         <div className=\"header-right\">\n//           <img src={gettheapp} alt=\"\" className=\"header-btn\" />\n//           <img src={createstore} alt=\"\" className=\"header-btn\" />\n//         </div>\n//       </div>\n\n\n\n//       <div style={{ paddingLeft: \"30px\" }}>\n//         <h1 style={{ fontSize: \"80px\", marginBottom: \"5px\" }}>video call your favourite brands.</h1>\n//         <h5 style={{ fontSize: \"28px\", marginTop: \"0\", marginBottom: \"15px\", fontWeight: 400 }}>discover, follow and shop from your favourite stores. anytime. anywhere.</h5>\n//       </div>\n//       <div id=\"ad1\" className=\"promo\">\n//         <p>get the shopping experience you deserve with our new and improved bigbox app</p>\n//         <img src={appstore} alt=\"\" className=\"promo-img\" />\n//         <img src={gplay} alt=\"\" className=\"promo-img\" />\n//         <button className=\"button\" onClick={removeDiv1}>\n//           <img src={closeicon} alt=\"\" style={{ cursor: \"pointer\" }} />\n//         </button>\n//       </div>\n\n//       <div id=\"ad2\" className=\"promo\">\n//         <p>selling online? setup your video store with bigbox and sell easily through video calls</p>\n//         <img src={videostore} alt=\"\" className=\"promo-img\" />\n//         <button className=\"button\" onClick={removeDiv2}>\n//           <img src={closeicon} alt=\"\" style={{ cursor: \"pointer\" }} />\n//         </button>\n//       </div>\n//       <div className=\"body\">\n//         <div className=\"sidebar\">\n//           <p style={{ fontSize: \"20px\", fontWeight: 600, marginTop: \"0\" }}>categories</p>\n//           {\n//             category.map((item) => (\n//               <div onClick={showCat} data-cat={item.id} style={{ cursor: \"pointer\" }}>\n//                 {item.name}\n//               </div>\n\n//             ))\n//           }\n\n//         </div>\n\n\n//         <div className=\"centerbody\">\n//           <div>\n//             <p className=\"numberStores\">{store.length} stores</p>\n//           </div>\n//           <div className=\"home-body\">\n\n//             {\n//               store.map((item) => (\n//                 <div key={item.id} className=\"home-store\" >\n//                   <img src={item.brand_logo_url} alt=\"\" className=\"brand-logo\" />\n//                   <a style={{ textDecoration: 'none' }} href={`https://in.bigbox.online/${item.slug}`} target=\"_blank\" >\n\n//                     <img className=\"home-storeImg\" src={item.cover_pic_mobile_url} alt=\"\" />\n//                     <h1>{item.brand.name}</h1>\n//                   </a>\n//                 </div>\n//               ))\n//             }\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\nconst App = () => {\n\n  const CATEGORIES_ENDPOINT = 'https://api.gousto.co.uk/products/v2.0/categories';\n  const PRODUCTS_ENDPOINT = 'https://api.gousto.co.uk/products/v2.0/products?includes[]=categories&includes[]=attributes&sort=position&image_sizes[]=365&image_sizes[]=400&period_id=120';\n\n  const NavContainer = React.createClass({\n    // All your state lives in your topmost container and is\n    // passed down to any component that needs it\n    getInitialState() {\n      return {\n        categories: [],\n        items: [],\n        selectedCategoryId: null\n      }\n    },\n\n    // Generic method that's used to set a selectedCategoryId\n    // Can now be passed into any component that needs to select a category\n    // without needing to worry about dealing with events and whatnot\n    selectCategory(category) {\n      this.setState({\n        selectedCategoryId: category\n      });\n    },\n\n    componentDidMount() {\n      this.serverRequest = axios.all([\n        axios.get(CATEGORIES_ENDPOINT),\n        axios.get(PRODUCTS_ENDPOINT)\n      ])\n        .then(axios.spread((categoriesResponse, itemsResponse) => {\n          console.log('Categories', categoriesResponse.data.data);\n          console.log('Item', itemsResponse.data.data);\n\n          // This `this` should work due to ES6 arrow functions\n          this.setState({\n            categories: categoriesResponse.data.data,\n            items: itemsResponse.data.data\n          });\n        }));\n    },\n\n    componentWillUnmount() {\n      this.serverRequest.abort();\n    },\n\n    render() {\n      // ABD: Always Be Destructuring\n      const {\n        categories,\n        items,\n        selectedCategoryId\n      } = this.state;\n\n      return (\n        <div className=\"navigation\">\n          <h1>\n            Store Cupboard\n          </h1>\n\n          <NavigationCategoryList\n            categories={categories}\n            // Pass the select function into the category list\n            // so the category items can call it when clicked\n            selectCategory={this.selectCategory} />\n\n          <NavigationSubCategoryList\n            items={items}\n            // Pass the selected category into the list of items\n            // to be used for filtering the list\n            selectedCategoryId={selectedCategoryId} />\n        </div>\n      );\n    }\n  });\n\n  const NavigationCategory = React.createClass({\n    // Prevent natural browser navigation and\n    // run `selectCategory` passed down from parent\n    // with the id passed down from props\n    // No querying DOM for info! when props have the info we need\n    handleClick(e) {\n      const { id, selectCategory } = this.props;\n      // Handle the event here instead of all the way at the top\n      // You might want to do other things as a result of the click\n      // Like maybe:\n      // Logger.logEvent('Selected category', id);\n      e.preventDefault();\n      selectCategory(id);\n    },\n\n    render() {\n      const { id, title } = this.props;\n      return (\n        <div className=\"navigationLink\">\n          <a href={id} onClick={this.handleClick}>\n            {title}\n          </a>\n        </div>\n      );\n    }\n  });\n  const NavigationCategoryList = React.createClass({\n    // If you put your mapping method out here, it'll only\n    // get instantiated once when the component mounts\n    // rather than being redefined every time there's a rerender\n    renderCategories() {\n      const { selectCategory, categories } = this.props;\n\n      return categories.map(category => {\n        const { id, title } = category;\n        return (\n          <NavigationCategory\n            // Every time you have a list you need a key prop\n            key={id}\n            title={title}\n            id={id}\n            selectCategory={selectCategory} />\n        );\n      });\n    },\n\n    render() {\n      return (\n        <div>\n          <div className=\"navigationCategory\">\n            {this.renderCategories()}\n          </div>\n        </div>\n      );\n    }\n  });\n\n  const NavigationSubCategoryLink = React.createClass({\n    render() {\n      const { name } = this.props;\n      return (\n        <div className=\"navigationSubCategory\" id={name}>\n          {name}\n        </div>\n      );\n    }\n  });\n  const NavigationSubCategoryList = React.createClass({\n    renderSubCategories() {\n      const { selectedCategoryId, items } = this.props;\n      // This is the key to filtering based on selectedCategoryId\n      return items.filter(item => {\n        // Checking all the categories in the item's categories array\n        // against the selectedCategoryId passed in from props\n        return item.categories.some(category => {\n          return category.id === selectedCategoryId;\n        });\n      })\n        // After filtering what you need, map through\n        // the new, shorter array and render each item\n        .map(item => {\n          const { title, link, id } = item;\n          return (\n            <NavigationSubCategoryLink\n              key={id}\n              name={title}\n              link={link} />\n          );\n        });\n    },\n\n    render() {\n      return (\n        <div className=\"subCategoryContainer\">\n          {this.renderSubCategories()}\n        </div>\n      );\n    }\n  });\n\n  render(<NavContainer />, document.getElementById('app'));\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}