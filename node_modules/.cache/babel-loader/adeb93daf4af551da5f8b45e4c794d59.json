{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tarun\\\\bigbox-advertise-home\\\\src\\\\App.js\";\n// import React, { useState, useEffect } from \"react\";\n// import logo from './logo.svg';\n// import './App.css';\n// import axios from \"axios\";\n// import appstore from './assets/astore.png'\n// import gplay from './assets/gplay.png'\n// import closeicon from './assets/closeicon.svg'\n// import videostore from './assets/videostore.svg'\n// import bigboxlogo from './assets/bigboxlogo.svg'\n// import createstore from './assets/createstore.svg'\n// import gettheapp from './assets/gettheapp.svg'\n// const App = () => {\n//   const [category, setCategory] = useState([]);\n//   const [store, setStore] = useState([]);\n//   let attribute;\n//   function showCat(catid) {\n//     let attribute = catid.target.attributes.getNamedItem('data-cat').value;\n//     console.log(attribute)\n//   }\n//   let catid = 10;\n//   const fetchData = () => {\n//     const categoryApi = \"https://api.bigbox.online/api/v1/users/brand_categories?page=1&limit=10\";\n//     const storeApi = `https://api.bigbox.online/api/v1/users/brand_category_stores?brand_category_id=${catid}&page=1&limit=10`;\n//     const getCategory = axios.get(categoryApi);\n//     const getStore = axios.get(storeApi);\n//     axios.all([getCategory, getStore]).then(\n//       axios.spread((...allData) => {\n//         const allCategory = allData[0].data.brand_categories;\n//         const allStore = allData[1].data.stores;\n//         // console.log(allCategory);\n//         // console.log(allStore);\n//         setCategory(allCategory);\n//         setStore(allStore);\n//       })\n//     )\n//   }\n//   useEffect(() => {\n//     fetchData()\n//   }, [])\n//   function removeDiv1() {\n//     document.getElementById(\"ad1\")\n//       .outerHTML = \"\";\n//   }\n//   function removeDiv2() {\n//     document.getElementById(\"ad2\")\n//       .outerHTML = \"\";\n//   }\n//   return (\n//     <div className=\"App\">\n//       <div className=\"header\">\n//         <div className=\"header-left\">\n//           <img src={bigboxlogo} alt=\"\" style={{ marginRight: \"20px\" }} />\n//           <p>shop</p>\n//           <p>what is bigbox?</p>\n//           <p>bigbox app</p>\n//           <p>for business</p>\n//           <p>help</p>\n//         </div>\n//         <div className=\"header-right\">\n//           <img src={gettheapp} alt=\"\" className=\"header-btn\" />\n//           <img src={createstore} alt=\"\" className=\"header-btn\" />\n//         </div>\n//       </div>\n//       <div style={{ paddingLeft: \"30px\" }}>\n//         <h1 style={{ fontSize: \"80px\", marginBottom: \"5px\" }}>video call your favourite brands.</h1>\n//         <h5 style={{ fontSize: \"28px\", marginTop: \"0\", marginBottom: \"15px\", fontWeight: 400 }}>discover, follow and shop from your favourite stores. anytime. anywhere.</h5>\n//       </div>\n//       <div id=\"ad1\" className=\"promo\">\n//         <p>get the shopping experience you deserve with our new and improved bigbox app</p>\n//         <img src={appstore} alt=\"\" className=\"promo-img\" />\n//         <img src={gplay} alt=\"\" className=\"promo-img\" />\n//         <button className=\"button\" onClick={removeDiv1}>\n//           <img src={closeicon} alt=\"\" style={{ cursor: \"pointer\" }} />\n//         </button>\n//       </div>\n//       <div id=\"ad2\" className=\"promo\">\n//         <p>selling online? setup your video store with bigbox and sell easily through video calls</p>\n//         <img src={videostore} alt=\"\" className=\"promo-img\" />\n//         <button className=\"button\" onClick={removeDiv2}>\n//           <img src={closeicon} alt=\"\" style={{ cursor: \"pointer\" }} />\n//         </button>\n//       </div>\n//       <div className=\"body\">\n//         <div className=\"sidebar\">\n//           <p style={{ fontSize: \"20px\", fontWeight: 600, marginTop: \"0\" }}>categories</p>\n//           {\n//             category.map((item) => (\n//               <div onClick={showCat} data-cat={item.id} style={{ cursor: \"pointer\" }}>\n//                 {item.name}\n//               </div>\n//             ))\n//           }\n//         </div>\n//         <div className=\"centerbody\">\n//           <div>\n//             <p className=\"numberStores\">{store.length} stores</p>\n//           </div>\n//           <div className=\"home-body\">\n//             {\n//               store.map((item) => (\n//                 <div key={item.id} className=\"home-store\" >\n//                   <img src={item.brand_logo_url} alt=\"\" className=\"brand-logo\" />\n//                   <a style={{ textDecoration: 'none' }} href={`https://in.bigbox.online/${item.slug}`} target=\"_blank\" >\n//                     <img className=\"home-storeImg\" src={item.cover_pic_mobile_url} alt=\"\" />\n//                     <h1>{item.brand.name}</h1>\n//                   </a>\n//                 </div>\n//               ))\n//             }\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;\nimport React from 'react';\nimport axios from \"axios\"; // These should probably be imported from a constants.js file\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORIES_ENDPOINT = 'https://api.gousto.co.uk/products/v2.0/categories';\nconst PRODUCTS_ENDPOINT = 'https://api.gousto.co.uk/products/v2.0/products?includes[]=categories&includes[]=attributes&sort=position&image_sizes[]=365&image_sizes[]=400&period_id=120';\nconst NavContainer = React.createClass({\n  displayName: \"NavContainer\",\n\n  // All your state lives in your topmost container and is\n  // passed down to any component that needs it\n  getInitialState() {\n    return {\n      categories: [],\n      items: [],\n      selectedCategoryId: null\n    };\n  },\n\n  // Generic method that's used to set a selectedCategoryId\n  // Can now be passed into any component that needs to select a category\n  // without needing to worry about dealing with events and whatnot\n  selectCategory(category) {\n    this.setState({\n      selectedCategoryId: category\n    });\n  },\n\n  componentDidMount() {\n    this.serverRequest = axios.all([axios.get(CATEGORIES_ENDPOINT), axios.get(PRODUCTS_ENDPOINT)]).then(axios.spread((categoriesResponse, itemsResponse) => {\n      console.log('Categories', categoriesResponse.data.data);\n      console.log('Item', itemsResponse.data.data); // This `this` should work due to ES6 arrow functions\n\n      this.setState({\n        categories: categoriesResponse.data.data,\n        items: itemsResponse.data.data\n      });\n    }));\n  },\n\n  componentWillUnmount() {\n    this.serverRequest.abort();\n  },\n\n  render() {\n    // ABD: Always Be Destructuring\n    const {\n      categories,\n      items,\n      selectedCategoryId\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Store Cupboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavigationCategoryList, {\n        categories: categories // Pass the select function into the category list\n        // so the category items can call it when clicked\n        ,\n        selectCategory: this.selectCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavigationSubCategoryList, {\n        items: items // Pass the selected category into the list of items\n        // to be used for filtering the list\n        ,\n        selectedCategoryId: selectedCategoryId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this);\n  }\n\n});\n_c = NavContainer;\nconst NavigationCategory = React.createClass({\n  displayName: \"NavigationCategory\",\n\n  // Prevent natural browser navigation and\n  // run `selectCategory` passed down from parent\n  // with the id passed down from props\n  // No querying DOM for info! when props have the info we need\n  handleClick(e) {\n    const {\n      id,\n      selectCategory\n    } = this.props; // Handle the event here instead of all the way at the top\n    // You might want to do other things as a result of the click\n    // Like maybe:\n    // Logger.logEvent('Selected category', id);\n\n    e.preventDefault();\n    selectCategory(id);\n  },\n\n  render() {\n    const {\n      id,\n      title\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigationLink\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: id,\n        onClick: this.handleClick,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this);\n  }\n\n});\n_c2 = NavigationCategory;\nconst NavigationCategoryList = React.createClass({\n  displayName: \"NavigationCategoryList\",\n\n  // If you put your mapping method out here, it'll only\n  // get instantiated once when the component mounts\n  // rather than being redefined every time there's a rerender\n  renderCategories() {\n    const {\n      selectCategory,\n      categories\n    } = this.props;\n    return categories.map(category => {\n      const {\n        id,\n        title\n      } = category;\n      return /*#__PURE__*/_jsxDEV(NavigationCategory // Every time you have a list you need a key prop\n      , {\n        title: title,\n        id: id,\n        selectCategory: selectCategory\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this);\n    });\n  },\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigationCategory\",\n        children: this.renderCategories()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this);\n  }\n\n});\n_c3 = NavigationCategoryList;\nconst NavigationSubCategoryLink = React.createClass({\n  displayName: \"NavigationSubCategoryLink\",\n\n  render() {\n    const {\n      name\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigationSubCategory\",\n      id: name,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this);\n  }\n\n});\n_c4 = NavigationSubCategoryLink;\nconst NavigationSubCategoryList = React.createClass({\n  displayName: \"NavigationSubCategoryList\",\n\n  renderSubCategories() {\n    const {\n      selectedCategoryId,\n      items\n    } = this.props; // This is the key to filtering based on selectedCategoryId\n\n    return items.filter(item => {\n      // Checking all the categories in the item's categories array\n      // against the selectedCategoryId passed in from props\n      return item.categories.some(category => {\n        return category.id === selectedCategoryId;\n      });\n    }) // After filtering what you need, map through\n    // the new, shorter array and render each item\n    .map(item => {\n      const {\n        title,\n        link,\n        id\n      } = item;\n      return /*#__PURE__*/_jsxDEV(NavigationSubCategoryLink, {\n        name: title,\n        link: link\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this);\n    });\n  },\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subCategoryContainer\",\n      children: this.renderSubCategories()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this);\n  }\n\n});\n_c5 = NavigationSubCategoryList;\nReactDOM.render( /*#__PURE__*/_jsxDEV(NavContainer, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 329,\n  columnNumber: 17\n}, this), document.getElementById('app'));\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"NavContainer\");\n$RefreshReg$(_c2, \"NavigationCategory\");\n$RefreshReg$(_c3, \"NavigationCategoryList\");\n$RefreshReg$(_c4, \"NavigationSubCategoryLink\");\n$RefreshReg$(_c5, \"NavigationSubCategoryList\");","map":{"version":3,"sources":["C:/Users/tarun/bigbox-advertise-home/src/App.js"],"names":["React","axios","CATEGORIES_ENDPOINT","PRODUCTS_ENDPOINT","NavContainer","createClass","getInitialState","categories","items","selectedCategoryId","selectCategory","category","setState","componentDidMount","serverRequest","all","get","then","spread","categoriesResponse","itemsResponse","console","log","data","componentWillUnmount","abort","render","state","NavigationCategory","handleClick","e","id","props","preventDefault","title","NavigationCategoryList","renderCategories","map","NavigationSubCategoryLink","name","NavigationSubCategoryList","renderSubCategories","filter","item","some","link","ReactDOM","document","getElementById"],"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","sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import logo from './logo.svg';\n// import './App.css';\n// import axios from \"axios\";\n// import appstore from './assets/astore.png'\n// import gplay from './assets/gplay.png'\n// import closeicon from './assets/closeicon.svg'\n// import videostore from './assets/videostore.svg'\n// import bigboxlogo from './assets/bigboxlogo.svg'\n// import createstore from './assets/createstore.svg'\n// import gettheapp from './assets/gettheapp.svg'\n\n\n\n\n\n// const App = () => {\n//   const [category, setCategory] = useState([]);\n//   const [store, setStore] = useState([]);\n//   let attribute;\n\n//   function showCat(catid) {\n//     let attribute = catid.target.attributes.getNamedItem('data-cat').value;\n//     console.log(attribute)\n\n//   }\n//   let catid = 10;\n\n//   const fetchData = () => {\n\n//     const categoryApi = \"https://api.bigbox.online/api/v1/users/brand_categories?page=1&limit=10\";\n//     const storeApi = `https://api.bigbox.online/api/v1/users/brand_category_stores?brand_category_id=${catid}&page=1&limit=10`;\n\n//     const getCategory = axios.get(categoryApi);\n//     const getStore = axios.get(storeApi);\n//     axios.all([getCategory, getStore]).then(\n//       axios.spread((...allData) => {\n//         const allCategory = allData[0].data.brand_categories;\n//         const allStore = allData[1].data.stores;\n//         // console.log(allCategory);\n//         // console.log(allStore);\n//         setCategory(allCategory);\n//         setStore(allStore);\n//       })\n//     )\n//   }\n\n//   useEffect(() => {\n//     fetchData()\n//   }, [])\n\n\n//   function removeDiv1() {\n//     document.getElementById(\"ad1\")\n//       .outerHTML = \"\";\n//   }\n\n//   function removeDiv2() {\n//     document.getElementById(\"ad2\")\n//       .outerHTML = \"\";\n\n//   }\n\n\n\n//   return (\n//     <div className=\"App\">\n\n//       <div className=\"header\">\n//         <div className=\"header-left\">\n//           <img src={bigboxlogo} alt=\"\" style={{ marginRight: \"20px\" }} />\n//           <p>shop</p>\n//           <p>what is bigbox?</p>\n//           <p>bigbox app</p>\n//           <p>for business</p>\n//           <p>help</p>\n//         </div>\n//         <div className=\"header-right\">\n//           <img src={gettheapp} alt=\"\" className=\"header-btn\" />\n//           <img src={createstore} alt=\"\" className=\"header-btn\" />\n//         </div>\n//       </div>\n\n\n\n//       <div style={{ paddingLeft: \"30px\" }}>\n//         <h1 style={{ fontSize: \"80px\", marginBottom: \"5px\" }}>video call your favourite brands.</h1>\n//         <h5 style={{ fontSize: \"28px\", marginTop: \"0\", marginBottom: \"15px\", fontWeight: 400 }}>discover, follow and shop from your favourite stores. anytime. anywhere.</h5>\n//       </div>\n//       <div id=\"ad1\" className=\"promo\">\n//         <p>get the shopping experience you deserve with our new and improved bigbox app</p>\n//         <img src={appstore} alt=\"\" className=\"promo-img\" />\n//         <img src={gplay} alt=\"\" className=\"promo-img\" />\n//         <button className=\"button\" onClick={removeDiv1}>\n//           <img src={closeicon} alt=\"\" style={{ cursor: \"pointer\" }} />\n//         </button>\n//       </div>\n\n//       <div id=\"ad2\" className=\"promo\">\n//         <p>selling online? setup your video store with bigbox and sell easily through video calls</p>\n//         <img src={videostore} alt=\"\" className=\"promo-img\" />\n//         <button className=\"button\" onClick={removeDiv2}>\n//           <img src={closeicon} alt=\"\" style={{ cursor: \"pointer\" }} />\n//         </button>\n//       </div>\n//       <div className=\"body\">\n//         <div className=\"sidebar\">\n//           <p style={{ fontSize: \"20px\", fontWeight: 600, marginTop: \"0\" }}>categories</p>\n//           {\n//             category.map((item) => (\n//               <div onClick={showCat} data-cat={item.id} style={{ cursor: \"pointer\" }}>\n//                 {item.name}\n//               </div>\n\n//             ))\n//           }\n\n//         </div>\n\n\n//         <div className=\"centerbody\">\n//           <div>\n//             <p className=\"numberStores\">{store.length} stores</p>\n//           </div>\n//           <div className=\"home-body\">\n\n//             {\n//               store.map((item) => (\n//                 <div key={item.id} className=\"home-store\" >\n//                   <img src={item.brand_logo_url} alt=\"\" className=\"brand-logo\" />\n//                   <a style={{ textDecoration: 'none' }} href={`https://in.bigbox.online/${item.slug}`} target=\"_blank\" >\n\n//                     <img className=\"home-storeImg\" src={item.cover_pic_mobile_url} alt=\"\" />\n//                     <h1>{item.brand.name}</h1>\n//                   </a>\n//                 </div>\n//               ))\n//             }\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\nimport React from 'react';\nimport axios from \"axios\";\n\n// These should probably be imported from a constants.js file\nconst CATEGORIES_ENDPOINT = 'https://api.gousto.co.uk/products/v2.0/categories';\nconst PRODUCTS_ENDPOINT = 'https://api.gousto.co.uk/products/v2.0/products?includes[]=categories&includes[]=attributes&sort=position&image_sizes[]=365&image_sizes[]=400&period_id=120';\n\nconst NavContainer = React.createClass({\n  // All your state lives in your topmost container and is\n  // passed down to any component that needs it\n  getInitialState() {\n    return {\n      categories: [],\n      items: [],\n      selectedCategoryId: null\n    }\n  },\n\n  // Generic method that's used to set a selectedCategoryId\n  // Can now be passed into any component that needs to select a category\n  // without needing to worry about dealing with events and whatnot\n  selectCategory(category) {\n    this.setState({\n      selectedCategoryId: category\n    });\n  },\n\n  componentDidMount() {\n    this.serverRequest = axios.all([\n      axios.get(CATEGORIES_ENDPOINT),\n      axios.get(PRODUCTS_ENDPOINT)\n    ])\n      .then(axios.spread((categoriesResponse, itemsResponse) => {\n        console.log('Categories', categoriesResponse.data.data);\n        console.log('Item', itemsResponse.data.data);\n\n        // This `this` should work due to ES6 arrow functions\n        this.setState({\n          categories: categoriesResponse.data.data,\n          items: itemsResponse.data.data\n        });\n      }));\n  },\n\n  componentWillUnmount() {\n    this.serverRequest.abort();\n  },\n\n  render() {\n    // ABD: Always Be Destructuring\n    const {\n      categories,\n      items,\n      selectedCategoryId\n    } = this.state;\n\n    return (\n      <div className=\"navigation\">\n        <h1>\n          Store Cupboard\n        </h1>\n\n        <NavigationCategoryList\n          categories={categories}\n          // Pass the select function into the category list\n          // so the category items can call it when clicked\n          selectCategory={this.selectCategory} />\n\n        <NavigationSubCategoryList\n          items={items}\n          // Pass the selected category into the list of items\n          // to be used for filtering the list\n          selectedCategoryId={selectedCategoryId} />\n      </div>\n    );\n  }\n});\n\nconst NavigationCategory = React.createClass({\n  // Prevent natural browser navigation and\n  // run `selectCategory` passed down from parent\n  // with the id passed down from props\n  // No querying DOM for info! when props have the info we need\n  handleClick(e) {\n    const { id, selectCategory } = this.props;\n    // Handle the event here instead of all the way at the top\n    // You might want to do other things as a result of the click\n    // Like maybe:\n    // Logger.logEvent('Selected category', id);\n    e.preventDefault();\n    selectCategory(id);\n  },\n\n  render() {\n    const { id, title } = this.props;\n    return (\n      <div className=\"navigationLink\">\n        <a href={id} onClick={this.handleClick}>\n          {title}\n        </a>\n      </div>\n    );\n  }\n});\nconst NavigationCategoryList = React.createClass({\n  // If you put your mapping method out here, it'll only\n  // get instantiated once when the component mounts\n  // rather than being redefined every time there's a rerender\n  renderCategories() {\n    const { selectCategory, categories } = this.props;\n\n    return categories.map(category => {\n      const { id, title } = category;\n      return (\n        <NavigationCategory\n          // Every time you have a list you need a key prop\n          key={id}\n          title={title}\n          id={id}\n          selectCategory={selectCategory} />\n      );\n    });\n  },\n\n  render() {\n    return (\n      <div>\n        <div className=\"navigationCategory\">\n          {this.renderCategories()}\n        </div>\n      </div>\n    );\n  }\n});\n\nconst NavigationSubCategoryLink = React.createClass({\n  render() {\n    const { name } = this.props;\n    return (\n      <div className=\"navigationSubCategory\" id={name}>\n        {name}\n      </div>\n    );\n  }\n});\nconst NavigationSubCategoryList = React.createClass({\n  renderSubCategories() {\n    const { selectedCategoryId, items } = this.props;\n    // This is the key to filtering based on selectedCategoryId\n    return items.filter(item => {\n      // Checking all the categories in the item's categories array\n      // against the selectedCategoryId passed in from props\n      return item.categories.some(category => {\n        return category.id === selectedCategoryId;\n      });\n    })\n      // After filtering what you need, map through\n      // the new, shorter array and render each item\n      .map(item => {\n        const { title, link, id } = item;\n        return (\n          <NavigationSubCategoryLink\n            key={id}\n            name={title}\n            link={link} />\n        );\n      });\n  },\n\n  render() {\n    return (\n      <div className=\"subCategoryContainer\">\n        {this.renderSubCategories()}\n      </div>\n    );\n  }\n});\n\nReactDOM.render(<NavContainer />, document.getElementById('app'));\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}